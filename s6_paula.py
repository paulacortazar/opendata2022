# -*- coding: utf-8 -*-
"""S6_Paula.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PZenzcPD8V4hBFWhkoJ_djz6ZZTFljQg
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
import re
import time
from datetime import datetime
import matplotlib.dates as mdates
import matplotlib.ticker as ticker
from urllib.request import urlopen
from bs4 import BeautifulSoup
import requests

def scraping_repelentes():  
    headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0", "Accept-Encoding":"gzip, deflate", "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8", "DNT":"1","Connection":"close", "Upgrade-Insecure-Requests":"1"}

    r = requests.get('https://www.superseis.com.py/search.aspx?searchterms=repelente')
    content = r.content
    soup = BeautifulSoup(content)

    listado = []
    for d in soup.find_all('div', attrs={'class':'item-box'}):
        nombre_producto = d.find('h2', attrs={'class':'product-title'})
        precio_producto = d.find('div', attrs={'class':'prices'})

        listado1=[]

        if nombre_producto is not None:
            listado1.append(nombre_producto.text)
        else:
            listado1.append("producto desconocido")
 
        if precio_producto is not None:
            listado1.append(precio_producto.text)
        else:
            listado1.append('precio desconocido')
        listado.append(listado1)    
    return listado

resultados = []
resultados.append(scraping_repelentes())
resultados

flatten = lambda l: [item for sublist in l for item in sublist]
df = pd.DataFrame(flatten(resultados),columns=['Nombre','Precio'])
df.to_csv('S6_repelentes.csv', index=False, encoding='utf-8')
df

df["Precio"] = df["Precio"].str.replace('\n', '')
df["Nombre"] = df["Nombre"].str.replace('\n', '')
df

df.to_csv('S6_repelentesFinal.csv', index=False, encoding='utf-8')
df